# AWSTemplateFormatVersion: '2010-09-09'
# Transform: AWS::Serverless-2016-10-31
# Description: >
#   python3.11

#   SAM Template for commerce-hub-po-update

# # More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
# Globals:
#   Function:
#     Timeout: 300
#     MemorySize: 256

#     # You can add LoggingConfig parameters such as the Logformat, Log Group, and SystemLogLevel or ApplicationLogLevel. Learn more here https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-loggingconfig.
#     LoggingConfig:
#       LogFormat: JSON
# Resources:
#   MyS3Bucket:
#     Type: AWS::S3::Bucket
#     Properties:
#       BucketName: pdf-files-zahid-v4

#   HelloWorldFunction:
#     Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
#     Properties:
#       PackageType: Image
#       Environment:
#         Variables:
#           MYSQL_HOST: "database-1.cb0k5xaybtp3.us-east-1.rds.amazonaws.com"
#           MYSQL_USER: "admin"
#           MYSQL_PASSWORD: "12345678"
#           MYSQL_DATABASE: "pdfreader"
#           DYNAMO_TABLE_NAME: "commerce_hub_packing_slips"
#       Architectures:
#       - x86_64
#       Events:
#         S3Event:
#           Type: S3
#           Properties:
#             Bucket: !Ref MyS3Bucket
#             Events: s3:ObjectCreated:*
#             Filter:
#               S3Key:
#                 Rules:
#                   - Name: suffix
#                     Value: .pdf
#                   - Name: prefix
#                     Value: new/
#       Policies:
#         - S3CrudPolicy:
#             BucketName: pdf-files-zahid-v4
#         - DynamoDBCrudPolicy:
#             TableName: commerce_hub_packing_slips  # Replace DynamoDBTableName with your DynamoDB table name
#         # - Statement:
#         #   - Sid: AmazonRDSDataFullAccess
#         #     Effect: Allow
#         #     Action:
#         #     - rds:*
#         #      Resource: "arn:aws:rds:us-east-1:160849148270:db:database-1"
#     Metadata:
#       Dockerfile: Dockerfile
#       DockerContext: ./hello_world
#       DockerTag: python3.11-v1

# Outputs:
#   # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
#   # Find out more about other implicit resources you can reference within SAM
#   # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
#   # HelloWorldApi:
#   #   Description: API Gateway endpoint URL for Prod stage for Hello World function
#   #   Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
#   HelloWorldFunction:
#     Description: Hello World Lambda Function ARN
#     Value: !GetAtt HelloWorldFunction.Arn
#   HelloWorldFunctionIamRole:
#     Description: Implicit IAM Role created for Hello World function
#     Value: !GetAtt HelloWorldFunctionRole.Arn


AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  python3.11

  SAM Template for commerce-hub-po-update

Parameters:
  MySQLHost:
    Type: String
  MySQLUser:
    Type: String
  MySQLPassword:
    Type: String
  MySQLDatabase:
    Type: String
  DynamoDBTableName:
    Type: String
  S3BucketName:
    Type: String

Globals:
  Function:
    Timeout: 300
    MemorySize: 256
    LoggingConfig:
      LogFormat: JSON

Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref S3BucketName

  CommerceHubLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      Environment:
        Variables:
          MYSQL_HOST: !Ref MySQLHost
          MYSQL_USER: !Ref MySQLUser
          MYSQL_PASSWORD: !Ref MySQLPassword
          MYSQL_DATABASE: !Ref MySQLDatabase
          DYNAMO_TABLE_NAME: !Ref DynamoDBTableName
      Architectures:
        - x86_64
      Events:
        S3Event:
          Type: S3
          Properties:
            Bucket: !Ref S3Bucket
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: .pdf
                  - Name: prefix
                    Value: new/
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref S3BucketName
        - DynamoDBCrudPolicy:
            TableName: !Ref DynamoDBTableName
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./app
      DockerTag: python3.11-v1

Outputs:
  CommerceHubLambdaFunction:
    Description: Hello World Lambda Function ARN
    Value: !GetAtt CommerceHubLambdaFunction.Arn
  CommerceHubLambdaFunctionIamRole:
    Description: Implicit IAM Role created for Hello World function
    Value: !GetAtt CommerceHubLambdaFunctionRole.Arn
