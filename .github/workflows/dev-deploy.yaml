name: Deploy SAM App
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

on:
  push:
    branches:
      - master

env:
  MYSQL_HOST: "database-1.cb0k5xaybtp3.us-east-1.rds.amazonaws.com"
  MYSQL_USER: "admin"
  MYSQL_DATABASE: "pdfreader"
  DYNAMO_TABLE_NAME: "commerce_hub_packing_slips"
  S3_BUCKET_NAME: "commerece-hub-v1"
  AWS_REGION: "us-east-1"

jobs:
  deploy-dev:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # - name: Change into commerce/app directory
      #   run: cd commerce/app
      - uses: aws-actions/setup-sam@v2
        with:
          use-installer: true
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      # - uses: aws-actions/configure-aws-credentials@v2
      #   with:
      #     aws-region: us-east-1
      #     role-duration-seconds: 1800
      #     role-skip-session-tagging: true
      #     role-to-assume: arn:aws:iam::396932459347:role/github-role
      - run: sam build --use-container --container-env-var MYSQL_HOST=${{ env.MYSQL_HOST }} --container-env-var MYSQL_USER=${{ env.$MYSQL_USER }} --container-env-var MYSQL_PASSWORD=$MYSQL_PASSWORD --container-env-var MYSQL_DATABASE=${{ env.MYSQL_DATABASE }} --container-env-var DYNAMO_TABLE_NAME=${{ env.DYNAMO_TABLE_NAME }}
        env:
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
      # Prevent prompts and failure when the stack is unchanged
      - run: sam deploy --no-confirm-changeset --no-fail-on-empty-changeset \
           --resolve-s3 \
           --s3-prefix "sam-lambdas" \
           --region ${{ env.AWS_REGION }} \
           --capabilities CAPABILITY_IAM \
           --parameter-overrides "MySQLHost=${{ env.MYSQL_HOST }} MySQLUser=${{ env.$MYSQL_USER }} MySQLPassword=$MYSQL_PASSWORD MySQLDatabase=${{ env.MYSQL_DATABASE }} DynamoDBTableName=${{ env.DYNAMO_TABLE_NAME }} S3BucketName=${{ env.S3_BUCKET_NAME }}"
        env:
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
